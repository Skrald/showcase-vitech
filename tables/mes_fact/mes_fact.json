{
  "name": "mes_fact",
  "lineageTag": "23c6e6a5-3648-4e3c-a0b8-d5d09ed78465",
  "partitions": [
    {
      "name": "mes_fact",
      "mode": "import",
      "source": {
        "type": "m",
        "expression": "let\n    src = Table.FromRows(\n        Json.Document(\n            Binary.Decompress(\n                Binary.FromText(\n                    \"ZVZbjhw5DLvLfPtD78dZgrn/NZZWdQ/KXgSFGGlGkimK8r9/P0KixD/rR/bHxpSNU5ioLM2f3/XCKL6qsuCNVnctW1YnKPClWWsUTuxhGivlQiU+J9LwfQoi04XIJ2gCNHOkfU8rL8xUi0rap0I2r17xLmrXOimNtXzHFEqvWiR2ovbXmSK8i8IdXHh1yYnaLGRpNe9YGuRNS+TKuGlow+2FhwbGP6/UOFE7j0QR5eTWAsivfB8awdC+q0WxLs4Ts39JtKVyV8cUXrumVyT9sODkXjrVBQWdpOuHBBCe1UOcgoVcN0gHhJrsuWdYLLELtH8y2l3bV2gi8hUdJ2iEEPi/PDyJpuYiuyqfAKHstG8qRlkJUfmJGhYQwN2+p+WvouyrBC6wOJG8EAUavlD76t6p0oNCsxVKiBO0UzpH0xPKillWs5yoYaEghdonTlamBbEeoBzlWXmPPk2TbbWfoPnJSVHOjB+ZL9Ur3cwDQQnRMzMCYlfRS53+YSFSMJYz+yJozhKI50CN+rrgBRMLVRmk8J4a/9DQhZz16FNNCrK6Yu3LB/wFP46eOzIXy1XXowaK0ukC+hSBgYgTVUO8Nrqyc4szhjmvsqYnAGEsnpHoPfIvSuPDA0ZXdBTjrcZLyE7QM5qYzSlKqdgdpcuJGpkyww32JRSKlm1pJ2h/lYhU4zD4u8EoXaFyJoGJpjvAClyhL9BDQpC4PISC0VV8oTYLe+DNafjIdFv+YiG/LHDCjschahtavc0/vwtCpNl2zLKkXBFygmailUNq0m1rsxV1gnZ3TGA+VY8MwYHRBZor7rJtSBeHl67kOFGTEzNgPqrmCIx8y3W/GRfNhuAnobcdvpAforpdczrD3dgRx7KpL1EGF++RdEvosjgxY+sRrbNIsWoodYnqidLHfCiZZjB6XO/EjDEA8wwWBCGl59KqD5voCToz3HY0H7KrPzITXjx6NkmQid10ooYcVc4YCrSlMcg3B3PHgDeqfk/rvt0YcafLbHfB7SEWfvvnM5MjXAi9ntRVWBB+LeVBwVNAxExQQfSL7802IDdlHtayrZa/NWV/KLBANj0wIoa73N64UYbXwlMWU2+jBfSyjg1rxyDM1GDPw00Xx6WrTzSBKKcEhtnwUr+ENSrQ2Hr/ng49DF/P7oI7jrTmtHA86RrLmBGcfCK53xRvKvQvVkMIU33v9wnee9cyGRRWZUpMr1AX9tK9AAblhofQLEKG3cAgyW/Chia8HoPHJuBEfm6m/CsMSwbvxjE/dClRf16EDSGJoegd2/Gf9w64FSaPKXPMi25O/3s7PSC8+/Ae3RXuvYKMF1+zBEgg0cfZPPE2lGtDDwqvhuy2zwjpnsZrfz0ZCX9mGc5pybUqnoyySR2XwyrEmpO89TVPFUvY96xGsJpHrPqCDJrQ54ooD+b98/v7Hw==\",\n                    BinaryEncoding.Base64\n                ),\n                Compression.Deflate\n            )\n        ),\n        let\n            _t = ((type nullable text) meta [Serialized.Text = true])\n        in\n            type table [month_code = _t, manager_id = _t, Sale = _t, Bonus = _t]\n    ),\n    typed = Table.TransformColumnTypes(\n        src,\n        {\n            {\"month_code\", Int64.Type},\n            {\"manager_id\", Int64.Type},\n            {\"Sale\", type number},\n            {\"Bonus\", type number}\n        }\n    ),\n    added_dt = Table.AddColumn(typed, \"report_dt\", each Date.EndOfMonth(Date.From(Text.From([month_code])&\"01\")), Date.Type)\nin\n    added_dt"
      }
    }
  ],
  "annotations": [
    {
      "name": "PBI_ResultType",
      "value": "Table"
    },
    {
      "name": "PBI_NavigationStepName",
      "value": "Navigation"
    },
    {
      "name": "TabularEditor_Relationships",
      "value": "[\r\n  {\r\n    \"fromTable\": \"mes_fact\",\r\n    \"fromColumn\": \"manager_id\",\r\n    \"toTable\": \"dim_manager\",\r\n    \"toColumn\": \"manager_id\"\r\n  },\r\n  {\r\n    \"fromTable\": \"mes_fact\",\r\n    \"fromColumn\": \"report_dt\",\r\n    \"toTable\": \"dim_calendar\",\r\n    \"toColumn\": \"dt\"\r\n  }\r\n]"
    }
  ]
}